<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Logbird - Gateway for logs.</title>
    <link>https://logbird.io/</link>
    <description>Recent content on Logbird - Gateway for logs.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 May 2019 12:27:00 +0300</lastBuildDate>
    
	<atom:link href="https://logbird.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Adding an SNS channel</title>
      <link>https://logbird.io/docs/triggers/adding-an-sns-channel/</link>
      <pubDate>Fri, 10 May 2019 13:21:42 +0300</pubDate>
      
      <guid>https://logbird.io/docs/triggers/adding-an-sns-channel/</guid>
      <description>Creating an SNS topic Logbird allows publishing to public and private SNS topics.
Granting Logbird access to trigger private SNS topic To grant Logbird access to the SNS topic, add Logbird AWS account (423847353785) to the allowed AWS accounts.
When creating a new topic If you want to create a new SNS topic, just add the Logbird AWS account under specified AWS accounts in Access policy: When editing an existing topic When editing the SNS topic, add to the access policy Statement array, and make sure to replace the sns ARN with your correct region, account id and topic name:</description>
    </item>
    
    <item>
      <title>Configuring Rules</title>
      <link>https://logbird.io/docs/rules/configuring-rules/</link>
      <pubDate>Fri, 10 May 2019 13:21:42 +0300</pubDate>
      
      <guid>https://logbird.io/docs/rules/configuring-rules/</guid>
      <description>Logbird allows you to create flexible log queries, which supports picking values (from words and JSONs) found in log lines. To find the correct log line, the query can start with an asterisk (*) to find the correct line position, check examples. If it doesn&amp;rsquo;t start with the asterisk, the log line must start exactly like the query starts. So if query starts with payment then the log line must start with payment.</description>
    </item>
    
    <item>
      <title>Library of rules</title>
      <link>https://logbird.io/docs/rules/rule-library/</link>
      <pubDate>Fri, 10 May 2019 13:21:42 +0300</pubDate>
      
      <guid>https://logbird.io/docs/rules/rule-library/</guid>
      <description>(function($){ function renderRow(rule) { return ` ${rule.service} ${rule.name} ${rule.type} ${rule.pattern} `; } function renderTable(rules, elementId) { let ruleHTML = &#39;&#39;; rules.forEach(function(r) { ruleHTML += renderRow(r); }); $(elementId).html(ruleHTML); } var json = $.getJSON(&#39;/library/filters.json&#39;) .done(data = { renderTable(data.rules, &#39;#lib-info&#39;); }).fail(data = console.log(data)); }(jQuery));           </description>
    </item>
    
  </channel>
</rss>